#preloader
	style.
		*,
		*::before,
		*::after {
			margin: 0;
			border: 0;
			padding: 0;
			box-sizing: border-box;
		}

		body {
			overflow: hidden;
			touch-action: none;
			overscroll-behavior: none;
		}

		.lock body {
			overflow: hidden;
			touch-action: none;
			overscroll-behavior: none;
		}

		.loading body {
			opacity: 0;
			visibility: hidden;
		}

		.loaded body {
			opacity: 1;
			visibility: visible;
			transition: opacity .5s;
		}

		.preloader {
			position: fixed;
			inset: 0;
			z-index: -1;
			display: flex;
			align-items: center;
			justify-content: center;
			pointer-events: none;
		}

		.preloader__body {
			display: flex;
			flex-direction: column;
			padding: 0.93rem;
			max-width: 31.25rem;
		}

		.preloader__counter {
			font-size: 10rem;
		}

		.preloader__line span {
			display: inline-block;
			height: 0.8rem;
			background-color: #80f;
			transition: width 0.2s;
		}
	script.
		function preloader() {
			const preloaderImages = document.querySelector('[data-preloader]')
				? document.querySelectorAll('[data-preloader] img')
				: document.querySelectorAll('img');
			const preloaderContainer = document.querySelector('#preloader');

			if (preloaderImages.length) {
				const preloaderTemplate =
					`
						<div class="preloader">
							<div class="preloader__body">
								<div class="preloader__counter">0%</div>
								<div class="preloader__line"><span></span></div>
							</div>
						</div>
					`;

				document.querySelector('html').insertAdjacentHTML("beforeend", preloaderTemplate);

				const preloader = document.querySelector('.preloader');
				const	showPercentLoad = document.querySelector('.preloader__counter');
				const	showLineLoad = document.querySelector('.preloader__line span');
				const	html = document.documentElement;

				let imagesLoadedCount = counter = progress = 0;

				html.classList.add('loading');
				html.classList.add('lock');

				preloaderImages.forEach(preloaderImage => {
					const imgClone = document.createElement('img');
					if (imgClone) {
						imgClone.onload = imageLoaded;
						imgClone.onerror = imageLoaded;
						preloaderImage.dataset.src
							? imgClone.src = preloaderImage.dataset.src
							: imgClone.src = preloaderImage.src;
					}
				});
				function setValueProgress(progress) {
					showPercentLoad
						? showPercentLoad.innerText = `${progress}%`
						: null;
					showLineLoad
						? showLineLoad.style.width = `${progress}%`
						: null;
				}
				showPercentLoad
					? setValueProgress(progress)
					: null;

				function imageLoaded() {
					imagesLoadedCount++;
					progress = Math.round((100 / preloaderImages.length) * imagesLoadedCount);
					const intervalId = setInterval(() => {
						counter >= progress
							? clearInterval(intervalId)
							: setValueProgress(++counter);
						counter >= 100
							? addLoadedClass()
							: null;
					}, 10);
				}
				function addLoadedClass() {
					html.classList.add('loaded');
					html.classList.remove('lock');
					html.classList.remove('loading');
					setInterval(() => {
						preloader.remove();
						preloaderContainer.remove();
					}, 500);
				}
			} else {
				preloaderContainer.remove();
			}
		}
		preloader();
