@use "sass:math";

@import "@scss/abstracts/functions";
@import "@scss/abstracts/variables";
@import "@scss/abstracts/mixins";

/* Custom scrollbar (Simplebar plugin) */

[data-simplebar] {
  position: relative;
  flex-flow: column wrap;
  align-content: flex-start;
  align-items: flex-start;
  justify-content: flex-start;
}

.simplebar-wrapper {
  @include widthHeight(inherit, inherit);

  overflow: hidden;
  max-width: inherit;
  max-height: inherit;
}

.simplebar-mask {
  @include widthHeight(auto !important, auto !important);

  position: absolute;
  z-index: 0;
  overflow: hidden;
  margin: 0;
  padding: 0;
  direction: inherit;
  inset: 0;
}

.simplebar-offset {
  position: absolute;
  margin: 0;
  padding: 0;
  box-sizing: inherit !important;
  direction: inherit !important;
  resize: none !important;
  inset: 0;
  -webkit-overflow-scrolling: touch;
}

.simplebar-content-wrapper {
  /* Required for horizontal native scrollbar to not appear if parent is taller than natural height */
  @include widthHeight(auto, 100%);
  position: relative;
  display: block;

  /* Not required for horizontal scroll to trigger */
  max-width: 100%;

  /* Needed for vertical scroll to trigger */
  max-height: 100%;
  box-sizing: border-box !important;
  direction: inherit;
  overscroll-behavior: none;
  -ms-overflow-style: none;
  scrollbar-width: none;
}

.simplebar-content-wrapper::-webkit-scrollbar,
.simplebar-hide-scrollbar::-webkit-scrollbar {
  @include widthHeight(0, 0);

  display: none;
}

.simplebar-content {
  &::before,
  &::after {
    content: " ";
    display: table;
  }
}

.simplebar-placeholder {
  width: 100%;
  max-width: 100%;
  max-height: 100%;
  pointer-events: none;
}

.simplebar-height-auto-observer-wrapper {
  @include widthHeight(100%, 100%);

  position: relative;
  z-index: -1;
  flex: inherit 0 0;
  float: left;
  overflow: hidden;
  margin: 0;
  padding: 0;
  max-width: 1px;
  max-height: rem(1);
  box-sizing: inherit !important;
  pointer-events: none;
}

.simplebar-height-auto-observer {
  @include widthHeight(1000%, 1000%);

  position: absolute;
  inset: 0;
  z-index: -1;
  display: block;
  overflow: hidden;
  min-width: rem(1);
  min-height: rem(1);
  box-sizing: inherit;
  opacity: 0;
  pointer-events: none;
}

.simplebar-track {
  position: absolute;
  right: 0;
  bottom: 0;
  z-index: 1;
  overflow: hidden;
  background-color: $colorLight;
  pointer-events: none;

  &.simplebar-vertical {
    top: 0;
    width: rem(11);
  }

  &.simplebar-vertical .simplebar-scrollbar {
    &::before {
      inset: 0;
    }
  }

  &.simplebar-horizontal {
    left: 0;
    height: rem(11);
  }

  &.simplebar-horizontal .simplebar-scrollbar {
    @include widthHeight(auto, rem(7));

    left: 0;
    right: auto;
    top: rem(2);
    min-width: rem(10);
    min-height: 0;

    &::before {
      left: 0;
      right: 0;
      height: 100%;
    }
  }
}

[data-simplebar].simplebar-dragging .simplebar-content {
  pointer-events: none;
  user-select: none;
}

[data-simplebar].simplebar-dragging .simplebar-track {
  pointer-events: all;
}

.simplebar-scrollbar {
  position: absolute;
  left: 0;
  right: 0;
  min-height: rem(10);

  &::before {
    @include pseudo;

    left: 0;
    right: 0;
    border-radius: rem(5);
    background-color: $colorGray;
    opacity: 0;
    transition: opacity 0.2s linear;
  }

  &.simplebar-visible {
    &::before {
      opacity: 0.5;
      transition: opacity 0s linear;
    }
  }
}

/* Rtl support */
[data-simplebar-direction="rtl"] .simplebar-track.simplebar-vertical {
  left: 0;
  right: auto;
}

.hs-dummy-scrollbar-size {
  @include widthHeight(rem(500), rem(500));

  position: fixed;
  overflow-x: scroll;
  overflow-y: hidden;
  direction: rtl;
  opacity: 0;
  visibility: hidden;
}

.simplebar-hide-scrollbar {
  position: fixed;
  left: 0;
  overflow-y: scroll;
  visibility: hidden;
  scrollbar-width: none;
}
